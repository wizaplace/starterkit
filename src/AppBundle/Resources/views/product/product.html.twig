{% extends '@App/layout.html.twig' %}

{% block meta %}
    <link rel="canonical" href="{{ product|productUrl }}">
{% endblock %}

{% block body %}
    {% set inStock = declination.amount > 0 %}

    <section id="product-page">
        <div class="container">

            {# breadcrumb #}
            <ol class="breadcrumb">
                <li><a href="{{ path("home") }}">{{ 'home.label'|trans }}</a></li>

                {# create links from product categories #}
                {% for category in product.categoryPath %}
                    <li><a href="{{ path('category', { slug: category.slug }) }}">{{ category.name }}</a></li>
                {% endfor %}
            </ol>


            {# product general info block #}
            <div class="demo-block column">

                {# product name #}
                <h1>{{ product.name }}</h1>

                {# product short description #}
                <p>{{ product.shortDescription|striptags|raw }}</p>

                {# product brand ('brand' and 'brandUrl' are Twig filter extensions provided by the WizaplaceFrontBundle) #}
                {% set brand = product|brand %}
                {% if brand|default() %}
                    <a href="{{ brand|brandUrl }}">{{ brand.name }}</a>
                {% endif %}

                {# product's vendor #}
                <p>{{ product.companies[0].name }}</p>

                {# user must be logged in to contact vendor #}
                {% if app.user %}

                    {# trigger 'contact vendor' modal #}
                    <a data-toggle="modal" href="#discussion-modal">{{ 'product.contact_vendor.label'|trans }}</a>

                {% else %}
                    <a href="{{ path('login', {'redirect_url': app.request.uri}) }}">{{ 'product.contact_vendor.login_constraint'|trans }}</a>
                {% endif %}
            </div>


            {# product images #}
            <div class="demo-block column">
                {% if declination.images %}
                    <br>
                    <div class="js-slick-declination-images">

                        {# featured image #}
                        <div class="slider-for">
                            {% for image in declination.images %}
                                <div><img src="{{ image|imageUrl(350, 350)}}"></div> {# empty div element is needed to avoid a height of 1px #}
                            {% endfor %}
                        </div>

                        {# thumbnails #}
                        <div class="slider-nav">
                            {% for image in declination.images %}
                                <div><img src="{{ image|imageUrl(150, 150)}}"></div> {# empty div element is needed to avoid a height of 1px #}
                            {% endfor %}
                        </div>
                    </div>
                {% else %}
                    <img src="{{ asset('images/no-image.jpg') }}">
                {% endif %}
            </div>

            {# favorites (only logged in users can add/remove product to/from their favorites) #}
            {% if app.user %}
                <a href="#" @click.prevent="removeFromFavorite" v-if="isFavorite">{{ 'product.favorite.remove'|trans }}</a>
                <a href="#" @click.prevent="addToFavorite" v-else>{{ 'product.favorite.add'|trans }}</a>
            {% endif %}


            {# product detail data #}
            <div class="demo-block column">

                {# supplier reference #}
                <div>{{ product.supplierReference }}</div>

                {# product code (EAN) #}
                <div>{{ product.code }}</div>

                {# product is/isn't in stock #}
                {% if inStock %}
                    <div>{{ 'product.stock.in_stock'|trans }}</div>
                {% else %}
                    <div>{{ 'product.stock.out_of_stock'|trans }}</div>
                {% endif %}


                {# price #}

                {# price (with promo) #}
                {% if declination.crossedoutprice %}

                    {# '|price' filter is provided by WizaplaceFrontBundle and return a price and euro symbol (â‚¬) #}
                    <div>{{ declination.pricewithoutvat|price }}</div>
                    <div><s>{{ declination.crossedoutprice|price }}</s></div>

                {# price (without promo) #}
                {% else %}
                    <div>{{ declination.priceWithoutVat|price }}</div>
                {% endif %}

                {# greentax #}
                <div>{{ declination.greenTax|price }}</div>
            </div>


            {# options selector #}
            {% if options %}
                <div class="demo-block column">
                    <ul>
                        {% for option in options  %}
                            <li>{{ option.name }}
                                <select data-id="{{ option.id }}" onchange="updateDeclination(this)">
                                    {% for variant in option.variants %}
                                        <option value="{{ variant.id }}" data-url="{{ variant.url }}" {% if variant.selected %}selected{% endif %}>{{ variant.name }}</option>
                                    {% endfor %}
                                </select>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}


            {# change quantity / add to basket #}
            <div class="demo-block">
                <input type="number" :value="quantity" v-model="quantity" {% if not inStock %} disabled {% endif %}>
                <button type="button" @click="decreaseQuantity" {% if not inStock %} disabled {% endif %}> - </button>
                <button type="button" @click="increaseQuantity" {% if not inStock %} disabled {% endif %}> + </button>

                {% if inStock %}
                    <button type="button" @click="addToBasket">{{ 'product.action.add_to_basket'|trans }}</button>
                {% else %}
                    <button type="button" disabled>{{ 'product.stock.out_of_stock'|trans }}</button>
                {% endif %}
            </div>


            {# long description #}
            <div class="demo-block column">
                <div>{{ product.description|striptags('<br><p>')|raw }}</div>
            </div>


            {# attributes #}
            <div class="demo-block column">

                {# simple attributes #}
                <ul>
                    {% for attribute in product.attributes if attribute.children|length == 0 %}
                        <li>{{ attribute.name }} : {{ attribute.value|join(', ') }}</li>
                    {% endfor %}
                </ul>

                {# grouped attributes #}
                {% for attribute in product.attributes if attribute.children|length > 0 %}
                    <h4>{{ attribute.name }}</h4>
                    <ul>
                        {% for attribute in attribute.children %}
                            <li>{{ attribute.name }} : {{ attribute.value|join(', ') }}</li>
                        {% endfor %}
                    </ul>
                {% endfor %}
            </div>


            {# customer reviews #}
            <div class="demo-block column">

                {% for review in reviews if reviews|length > 0 %}

                    {# reviewer name #}
                    <div>{{ review.author.name }}</div>

                    {# date #}
                    <div>{{ review.postedAt|date('d/m/Y') }}</div>

                    {# rating #}
                    <div>
                        {% for i in 1..5 %}
                            {% if i <= review.rating %}
                                <i class="glyphicon glyphicon-star"></i>
                            {% else %}
                                <i class="glyphicon glyphicon-star-empty"></i>
                            {% endif %}
                        {% endfor %}
                    </div>

                    {# review message #}
                    <div>{{ review.message }}</div>
                {% endfor %}
            </div>


            {# 'add your own review' #}

            {# user is logged in #}
            {% if app.user %}
                <form method="post" action="{{ path('create_product_review') }}">
                    <div class="demo-block column">
                        <input type="hidden" name="redirect_url" value="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) }}">
                        <input type="hidden" name="product_id" value="{{ product.id }}">
                        <input type="hidden" name="author" value="{{ app.user.wizaplaceUser.firstName~' '~app.user.wizaplaceUser.lastName }}">

                        {# star rating #}
                        <label for="review-rating">{{ 'product.review.rating'|trans }}</label>
                        <input id="review-rating" name="rating" class="js-rating" value="3">

                        {# message input #}
                        <label for="review-message">{{ 'product.review.message'|trans }}</label>
                        <textarea id="review-message" name="message"></textarea>

                        {# review submit button #}
                        <input type="submit" name="dispatch[discussion.add]" value="{{ 'product.review.validate'|trans|upper }}">
                    </div>
                </form>

            {# user is not logged in #}
            {% else %}
                <div class="demo-block column">
                    <a href="{{ path('login', {'redirect_url': app.request.uri}) }}">{{ 'product.review.login_constraint'|trans }}</a>
                </div>
            {% endif %}

            {# products carousel #}
            <div class="js-slick-product-group">
                {% for product in latestProducts %}
                    {% include '@App/common/product/card.html.twig' with { "product": product } %}
                {% endfor %}
            </div>

        </div>
    </section>

    {# include modals #}
    {% include '@App/common/product/_modal_add-to-basket.html.twig' %}
    {% include '@App/product/_discussion-modal.html.twig' %}

{% endblock %}

{% block scripts %}
    <script>
        new Vue({
            delimiters: ['${','}'],
            el: '#product-page',
            data: {
                quantity: 1,
                declinationId: '{{ declination.id }}',
                isFavorite: {{ isFavorite|json_encode }},
            },

            methods: {
                increaseQuantity: function() {
                    if(this.quantity < {{ declination.amount|e('js') }}) {
                        this.quantity ++;
                    }
                },

                decreaseQuantity: function() {
                    if(this.quantity > 1) {
                        this.quantity --;
                    }
                },

                addToBasket: function() {

                    var self = this;
                    $.ajax({
                        type: "POST",
                        url: "{{ path('basket_add_product') }}",
                        data: { declinationId: this.declinationId, quantity: this.quantity },
                        success: function(response) {
                            var declinationInfo = {
                                name: {{ product.name|json_encode|raw }},
                                price: {{ declination.priceWithoutVat|json_encode|raw }},
                                image: {{ (declination.images|length > 0) ? declination.images|first|imageUrl(100, 100)|json_encode|raw : 'null' }},
                            };
                            hydrateModal(declinationInfo, self.quantity, response.message);
                        }
                    });
                },

                addToFavorite: function () {

                    var self = this;
                    $.ajax({
                        type: "POST",
                        url: "{{ path('add_to_favorites') }}",
                        data: { declinationId: this.declinationId },
                        success: function() {
                            self.isFavorite = true;
                            notification.createAlert("{{'product.favorite.successfully_added'|trans}}", "success");
                        },
                        error: function () {
                            notification.createAlert("{{'product.favorite.already_favored'|trans}}", "danger");
                        }
                    });
                },

                removeFromFavorite: function () {

                    var self = this;
                    $.ajax({
                        type: "POST",
                        url: "{{ path('remove_from_favorites') }}",
                        data: { declinationId: this.declinationId },
                        success: function() {
                            self.isFavorite = false;
                            notification.createAlert("{{'product.favorite.successfully_removed'|trans}}", "success");
                        }
                    });
                }
            },
        });

        function updateDeclination(select){

            {# display spinner while new page is loading #}
            helper.displayLoadingSpinner();

            {# redirect to selected declination url #}
            var redirectUrl = $(select).find(':selected').data('url');
            window.location.replace(redirectUrl);
        }
    </script>
{% endblock %}
