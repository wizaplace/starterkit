# .platform.app.yaml

# The name of this application, which must be unique within a project.
name: 'starterkit'

# The type key specifies the language and version for your application.
type: 'php:7.1'

# On PHP, there are multiple build flavors available. Pretty much everyone
# except Drupal 7 users will want the composer flavor.
build:
  flavor: 'composer'

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
#relationships:
#    vendor1: 'globaldb:vendor1'
#    vendor2: 'globaldb:vendor2'

# The configuration of the application when it is exposed to the web.
web:
    locations:
        '/':
            # The public directory of the application relative to its root.
            root: 'web'
            # The front-controller script which determines where to send
            # non-static requests.
            passthru: '/app.php'
            rules:
                # Provide a longer TTL (2 weeks) for aggregated assets files.
                '^/(bundles|fonts|images|js|scripts|style)':
                    expires: 2w
        # Allow uploaded files to be served, but do not run scripts.
        # Missing files get mapped to the front controller above.
        '/files':
            root: 'web/files'
            scripts: false
            allow: true
            passthru: '/app.php'

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
# The keys are directory paths relative to the application root. The values are
# strings such as 'shared:files/NAME' where NAME is just a unique name for the mount.
mounts:
    '/web/files': 'shared:files/web-files'
    '/var/cache': 'shared:files/cache'
    '/var/logs': 'shared:files/logs'
    '/var/sessions': 'shared:files/sessions'
    '/var/translations': 'shared:files/translations'
    '/var/filebeat': 'shared:files/filebeat'

runtime:
    extensions:
        - newrelic

dependencies:
    nodejs:
        gulp: "^3.9"
        gulp-less: "^3.3.0"
        gulp-concat: "^2.6.1"
        babelify: "^7.3.0"
        browserify: "^13.1.0"

# The hooks that will be triggered when the package is deployed.
hooks:
    # Build hooks can modify the application files on disk but not access any services like databases.
    build: |
      set -eu
      IFS=$'\n\t'

      buildID=$(cat /proc/sys/kernel/random/uuid)
      echo "[`date --iso-8601=seconds`] build_start ${PLATFORM_PROJECT}.${PLATFORM_TREE_ID}.${buildID}"
      echo "${buildID}" > /app/var/buildID

      # install and compile frontend assets
      bin/console --env=prod assets:install --no-debug
      bin/console --env=prod fos:js-routing:dump --no-debug
      npm install
      gulp deploy

      # remove envs other than prod
      rm -f web/app_*.php

      # use our custom php.ini
      cp .platform.php.ini php.ini

      # download filebeat
      wget -q https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.5.2-linux-x86_64.tar.gz
      tar xfz filebeat-5.5.2-linux-x86_64.tar.gz
      cp filebeat-5.5.2-linux-x86_64/filebeat bin/filebeat
      rm -rf filebeat-5.5.2-linux-x86_64 filebeat-5.5.2-linux-x86_64.tar.gz

      # push our local translations to the backend
      bin/console --env=prod wizaplace:translations:push

      echo "[`date --iso-8601=seconds`] build_end ${PLATFORM_PROJECT}.${PLATFORM_TREE_ID}.${buildID}"
    # Deploy hooks can access services but the file system is now read-only.
    deploy: |
      set -eu
      IFS=$'\n\t'

      deployID="$(cat /app/var/buildID).$(cat /proc/sys/kernel/random/uuid)"
      echo "[`date --iso-8601=seconds`] deploy_start ${PLATFORM_PROJECT}.${PLATFORM_TREE_ID}.${deployID}"

      # cache
      bin/console --env=prod cache:clear --no-warmup
      rm -rf var/cache/*
      bin/console --env=prod cache:warmup

      DEPLOY_END=$(date +%s%N)
      echo "[`date --iso-8601=seconds`] deploy_end ${PLATFORM_PROJECT}.${PLATFORM_TREE_ID}.${deployID}"

crons:
    translations:
        # regularly pull translations' values from the backend
        spec: '*/5 * * * *'
        cmd: 'php bin/console --env=prod wizaplace:translations:pull && rm -f var/cache/prod/translations/* && bin/console --env=prod cache:warmup'
    filebeat:
        spec: '*/5 * * * *'
        cmd: './bin/filebeat.sh'
