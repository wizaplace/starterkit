# .platform.app.yaml

# The name of this application, which must be unique within a project.
name: 'starterkit'

# The type key specifies the language and version for your application.
type: 'php:7.1'

# On PHP, there are multiple build flavors available. Pretty much everyone
# except Drupal 7 users will want the composer flavor.
build:
  flavor: 'composer'

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
#relationships:
#    vendor1: 'globaldb:vendor1'
#    vendor2: 'globaldb:vendor2'

# The configuration of the application when it is exposed to the web.
web:
    locations:
        '/':
            # The public directory of the application relative to its root.
            root: 'web'
            # The front-controller script which determines where to send
            # non-static requests.
            passthru: '/app.php'
        # Allow uploaded files to be served, but do not run scripts.
        # Missing files get mapped to the front controller above.
        '/files':
            root: 'web/files'
            scripts: false
            allow: true
            passthru: '/app.php'

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
# The keys are directory paths relative to the application root. The values are
# strings such as 'shared:files/NAME' where NAME is just a unique name for the mount.
mounts:
    '/web/files': 'shared:files/web-files'
    '/var/cache': 'shared:files/cache'
    '/var/logs': 'shared:files/logs'
    '/var/sessions': 'shared:files/sessions'

dependencies:
    nodejs:
        gulp: "^3.9"
        gulp-less: "^3.3.0"
        gulp-concat: "^2.6.1"
        babelify: "^7.3.0"
        browserify: "^13.1.0"

# The hooks that will be triggered when the package is deployed.
hooks:
    # Build hooks can modify the application files on disk but not access any services like databases.
    build: |
      bin/console --env=prod assets:install --no-debug
      npm install
      gulp deploy
      rm -f web/app_dev.php
      cp .platform.php.ini php.ini
    # Deploy hooks can access services but the file system is now read-only.
    deploy: |
      bin/console --env=prod cache:clear
      rm -rf var/cache/*
